[{"D:\\React\\covid-19-tracker\\src\\reportWebVitals.js":"1","D:\\React\\covid-19-tracker\\src\\App.js":"2","D:\\React\\covid-19-tracker\\src\\components\\InfoContainer.js":"3","D:\\React\\covid-19-tracker\\src\\components\\Table.js":"4","D:\\React\\covid-19-tracker\\src\\index.js":"5","D:\\React\\covid-19-tracker\\src\\components\\Graph.js":"6","D:\\React\\covid-19-tracker\\src\\components\\Map.js":"7","D:\\React\\covid-19-tracker\\src\\utils.js":"8"},{"size":362,"mtime":1606244549004,"results":"9","hashOfConfig":"10"},{"size":4959,"mtime":1611921067518,"results":"11","hashOfConfig":"10"},{"size":1129,"mtime":1611875537739,"results":"12","hashOfConfig":"10"},{"size":564,"mtime":1611914588151,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1611913572438,"results":"14","hashOfConfig":"10"},{"size":2203,"mtime":1611917794261,"results":"15","hashOfConfig":"10"},{"size":924,"mtime":1611790007064,"results":"16","hashOfConfig":"10"},{"size":1773,"mtime":1611915939038,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15ss5g2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\React\\covid-19-tracker\\src\\reportWebVitals.js",[],["36","37"],"D:\\React\\covid-19-tracker\\src\\App.js",["38","39","40"],"D:\\React\\covid-19-tracker\\src\\components\\InfoContainer.js",[],"D:\\React\\covid-19-tracker\\src\\components\\Table.js",[],"D:\\React\\covid-19-tracker\\src\\index.js",[],["41","42"],"D:\\React\\covid-19-tracker\\src\\components\\Graph.js",[],"D:\\React\\covid-19-tracker\\src\\components\\Map.js",[],"D:\\React\\covid-19-tracker\\src\\utils.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":110,"column":31,"nodeType":"49","messageId":"50","endLine":110,"endColumn":33},{"ruleId":"47","severity":1,"message":"48","line":118,"column":31,"nodeType":"49","messageId":"50","endLine":118,"endColumn":33},{"ruleId":"47","severity":1,"message":"48","line":126,"column":31,"nodeType":"49","messageId":"50","endLine":126,"endColumn":33},{"ruleId":"43","replacedBy":"51"},{"ruleId":"45","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["53"],["54"],"no-global-assign","no-unsafe-negation"]d-19/all')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch('https://disease.sh/v3/covid-19/countries')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // restructuring of data by looping over the data came from the request\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n\r\n          let sortedData = sortData(data);\r\n          setTableData(sortedData);\r\n          setMapCounties(data);\r\n          setCountries(countries);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (event) => {\r\n    const countryCode = event.target.value;\r\n    setCountry(countryCode);\r\n\r\n    const url =\r\n      countryCode === 'worldwide'\r\n        ? 'https://disease.sh/v3/covid-19/all'\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountry(countryCode);\r\n        setCountryInfo(data);\r\n\r\n        // kboul help me to dynamically center the map to selected country\r\n        // https://stackoverflow.com/users/4929531/kboul\r\n        if (typeof data.countryInfo !== 'undefined') {\r\n          const {\r\n            countryInfo: { lat, long },\r\n          } = data;\r\n          setMapCenter({ lat, lng: long });\r\n\r\n          setMapZoom(4);\r\n        } else {\r\n          setMapCenter({ lat: 34.80746, lng: -40.4796 });\r\n          setMapZoom(3);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__statsmap\">\r\n        <div className=\"app__header\">\r\n          <h1 className=\"app__title\">Covid-19 Tracker</h1>\r\n          <FormControl key={uuid()} className=\"app__dropdown\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              onChange={onCountryChange}\r\n              value={country}\r\n            >\r\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n              {countries.map((country) => (\r\n                <MenuItem key={uuid()} value={country.value}>\r\n                  {country.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"app__stats\">\r\n          <InfoContainer\r\n            isRed\r\n            active={casesType == 'cases'}\r\n            onClick={(e) => setCasesType('cases')}\r\n            title=\"Coronavirus Cases\"\r\n            cases={statPrettier(countryInfo.todayCases)}\r\n            total={statPrettier(countryInfo.cases)}\r\n          />\r\n          <InfoContainer\r\n            isGreen\r\n            active={casesType == 'recovered'}\r\n            onClick={(e) => setCasesType('recovered')}\r\n            title=\"Recovered\"\r\n            cases={statPrettier(countryInfo.todayRecovered)}\r\n            total={statPrettier(countryInfo.recovered)}\r\n          />\r\n          <InfoContainer\r\n            isOrange\r\n            active={casesType == 'deaths'}\r\n            onClick={(e) => setCasesType('deaths')}\r\n            title=\"Deaths\"\r\n            cases={statPrettier(countryInfo.todayDeaths)}\r\n            total={statPrettier(countryInfo.deaths)}\r\n          />\r\n        </div>\r\n        <Map\r\n          casesType={casesType}\r\n          countries={mapCountries}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n        />\r\n      </div>\r\n      <div className=\"app__countriesgraph\">\r\n        <Card>\r\n          <CardContent>\r\n            <h3>Live Cases by Country</h3>\r\n            <Table countries={tableData} />\r\n            <h3 className=\"app__graphTitle\">Worldwide new {casesType}</h3>\r\n            <Graph casesType={casesType} />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["42","43"],"D:\\React\\covid-19-tracker\\src\\components\\InfoContainer.js",[],"D:\\React\\covid-19-tracker\\src\\components\\Table.js",[],"D:\\React\\covid-19-tracker\\src\\index.js",[],"D:\\React\\covid-19-tracker\\src\\components\\Graph.js",[],"D:\\React\\covid-19-tracker\\src\\components\\Map.js",[],"D:\\React\\covid-19-tracker\\src\\utils.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":110,"column":31,"nodeType":"50","messageId":"51","endLine":110,"endColumn":33},{"ruleId":"48","severity":1,"message":"49","line":118,"column":31,"nodeType":"50","messageId":"51","endLine":118,"endColumn":33},{"ruleId":"48","severity":1,"message":"49","line":126,"column":31,"nodeType":"50","messageId":"51","endLine":126,"endColumn":33},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["54"],["55"],"no-global-assign","no-unsafe-negation"]